{"ast":null,"code":"var _jsxFileName = \"/home/sherna/SWBCFrontend/swbc-poc/src/components/Upload.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport './Upload.css';\nimport cloudImg from '../cloud.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false); // Show loading state\n  const {\n    getRootProps,\n    getInputProps,\n    open\n  } = useDropzone({\n    noClick: true,\n    onDrop: async acceptedFiles => {\n      setFiles(acceptedFiles);\n      setLoading(true); // Start loading state\n\n      // Prepare file for upload\n      const formData = new FormData();\n      formData.append(\"file\", acceptedFiles[0]);\n      try {\n        // Make API request\n        const res = await fetch(\"https://your-api-endpoint.com/upload\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (!res.ok) throw new Error(\"Failed to upload\");\n        const data = await res.json(); // API response (JSON format)\n\n        // Set response state with API data\n        setResponse({\n          title: data.title || \"Untitled Document\",\n          text: data.text || \"No text extracted\",\n          metadata: {\n            size: acceptedFiles[0].size,\n            type: acceptedFiles[0].type\n          }\n        });\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      } finally {\n        setLoading(false); // Stop loading state\n      }\n    }\n  });\n  const handleReload = () => {\n    setFiles([]);\n    setResponse(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [!response && /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: \"upload-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: cloudImg,\n          alt: \"Cloud Icon\",\n          className: \"rotating-gear rotate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Drag & drop files here, or click to browse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Files Supported: PDF, TEXT, DOC, DOCX, PNG, JPG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"upload-button\",\n        onClick: open,\n        children: \"Browse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"response-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"document-title\",\n        children: response.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"metadata\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \" \", response.metadata.size, \" bytes | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 69\n        }, this), \" \", response.metadata.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extracted-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Extracted Text:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReload,\n        className: \"upload-button\",\n        children: \"Upload Another Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"yRo7jnCargvRQr8lchzW3+1Urrw=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","useDropzone","cloudImg","jsxDEV","_jsxDEV","Upload","_s","files","setFiles","response","setResponse","loading","setLoading","getRootProps","getInputProps","open","noClick","onDrop","acceptedFiles","formData","FormData","append","res","fetch","method","body","ok","Error","data","json","title","text","metadata","size","type","error","console","handleReload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/home/sherna/SWBCFrontend/swbc-poc/src/components/Upload.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport './Upload.css';\nimport cloudImg from '../cloud.png';\n\nfunction Upload() {\n  const [files, setFiles] = useState([]);\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false); // Show loading state\n  const { getRootProps, getInputProps, open } = useDropzone({\n    noClick: true,\n    onDrop: async (acceptedFiles) => {\n      setFiles(acceptedFiles);\n      setLoading(true); // Start loading state\n\n      // Prepare file for upload\n      const formData = new FormData();\n      formData.append(\"file\", acceptedFiles[0]);\n\n      try {\n        // Make API request\n        const res = await fetch(\"https://your-api-endpoint.com/upload\", {\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (!res.ok) throw new Error(\"Failed to upload\");\n\n        const data = await res.json(); // API response (JSON format)\n\n        // Set response state with API data\n        setResponse({\n          title: data.title || \"Untitled Document\",\n          text: data.text || \"No text extracted\",\n          metadata: {\n            size: acceptedFiles[0].size,\n            type: acceptedFiles[0].type,\n          },\n        });\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      } finally {\n        setLoading(false); // Stop loading state\n      }\n    },\n  });\n\n  const handleReload = () => {\n    setFiles([]);\n    setResponse(null);\n  };\n\n  return (\n    <div className=\"upload-container\">\n      {/* Hide upload box when response is received */}\n      {!response && (\n        <div {...getRootProps()} className=\"upload-box\">\n          <input {...getInputProps()} />\n          <div className=\"upload-image\">\n            <img src={cloudImg} alt=\"Cloud Icon\" className=\"rotating-gear rotate\" />\n          </div>\n          <h4>Drag & drop files here, or click to browse</h4>\n          <p>Files Supported: PDF, TEXT, DOC, DOCX, PNG, JPG</p>\n          <button className=\"upload-button\" onClick={open}>\n            Browse\n          </button>\n        </div>\n      )}\n\n      {/* Show the response once file is processed */}\n      {response && (\n        <div className=\"response-container\">\n          <h2 className=\"document-title\">{response.title}</h2>\n          <p className=\"metadata\">\n            <strong>Size:</strong> {response.metadata.size} bytes | <strong>Type:</strong>{\" \"}\n            {response.metadata.type}\n          </p>\n          <div className=\"extracted-text\">\n            <h3>Extracted Text:</h3>\n            <p>{response.text}</p>\n          </div>\n          <button onClick={handleReload} className=\"upload-button\">\n            Upload Another Document\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Upload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}